[{"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\index.js":"1","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\App.js":"2","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\reportWebVitals.js":"3","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\home.js":"4","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\nav.js":"5","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\login.js":"6","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\register.js":"7","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\reducer.js":"8","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\initialState.js":"9","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\actionTypes.js":"10","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\actionCreators.js":"11","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\selectors.js":"12","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\footer.js":"13","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\addProject.js":"14","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\project.js":"15","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\bug.js":"16","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\formBug.js":"17","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\formBug2.js":"18","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\profile.js":"19","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\editProject.js":"20"},{"size":732,"mtime":1610804983822,"results":"21","hashOfConfig":"22"},{"size":2429,"mtime":1611269275088,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1610804983825,"results":"24","hashOfConfig":"22"},{"size":28299,"mtime":1611308818507,"results":"25","hashOfConfig":"22"},{"size":7954,"mtime":1611302912013,"results":"26","hashOfConfig":"22"},{"size":4773,"mtime":1611256511520,"results":"27","hashOfConfig":"22"},{"size":4285,"mtime":1611308326808,"results":"28","hashOfConfig":"22"},{"size":465,"mtime":1610804983825,"results":"29","hashOfConfig":"22"},{"size":67,"mtime":1610804983824,"results":"30","hashOfConfig":"22"},{"size":43,"mtime":1610808786734,"results":"31","hashOfConfig":"22"},{"size":166,"mtime":1610806607876,"results":"32","hashOfConfig":"22"},{"size":47,"mtime":1610749401682,"results":"33","hashOfConfig":"22"},{"size":455,"mtime":1611264185906,"results":"34","hashOfConfig":"22"},{"size":6185,"mtime":1611302535146,"results":"35","hashOfConfig":"22"},{"size":9292,"mtime":1611268474988,"results":"36","hashOfConfig":"22"},{"size":5737,"mtime":1611268471023,"results":"37","hashOfConfig":"22"},{"size":5204,"mtime":1611299300130,"results":"38","hashOfConfig":"22"},{"size":5663,"mtime":1611268473302,"results":"39","hashOfConfig":"22"},{"size":4870,"mtime":1611268475886,"results":"40","hashOfConfig":"22"},{"size":10680,"mtime":1611307818931,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"3cdivt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\index.js",[],["93","94"],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\App.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\reportWebVitals.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\home.js",["95","96","97","98","99","100","101"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {  Button, Typography } from '@material-ui/core'\r\nimport {Link} from \"react-router-dom\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {RETURN_USER} from \"../redux/actionCreators\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport plus from \"../icons/plus.png\"\r\nimport plusWhite from \"../icons/plusWhite.png\"\r\nimport { CircularProgress } from \"@material-ui/core\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            filterdProjects1:[],\r\n                filterdProjects2:[],\r\n                filterdProjects3:[],\r\n            loading: false,\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loading: true\r\n        }))\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8001/api/projects\");\r\n            const data = await response.json();\r\n\r\n            const filterdProjects1 =new Array();\r\n            data.forEach(element => {\r\n                if(element.id_categorie===1)\r\n                {let clone =JSON.parse(JSON.stringify(element))\r\n                filterdProjects1.push(clone);\r\n                }\r\n            });\r\n\r\n            const filterdProjects2=new Array();\r\n            data.forEach(element => {\r\n                if(element.id_categorie===2)\r\n                {let clone =JSON.parse(JSON.stringify(element))\r\n                    filterdProjects2.push(clone);\r\n                    }\r\n                \r\n            });\r\n\r\n            const filterdProjects3=new Array();\r\n            data.forEach(element => {\r\n                if(element.id_categorie===3)\r\n                {let clone =JSON.parse(JSON.stringify(element))\r\n                    filterdProjects3.push(clone);\r\n                    }\r\n            });\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded: true,\r\n                data: data,\r\n                filterdProjects1:filterdProjects1,\r\n                filterdProjects2:filterdProjects2,\r\n                filterdProjects3:filterdProjects3,\r\n\r\n            }))\r\n\r\n            \r\n           \r\n        }\r\n\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n\r\n        \r\n    }\r\n    async DeleteProject(id_project,id_categorie) {\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/projects/${id_project}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            const data = await response.json();\r\n   \r\n\r\n            let x=[];\r\n            let y=[];\r\n            let z=[];\r\n            const props=this.props;\r\n\r\n            x=JSON.parse(localStorage.getItem(\"projects1\"));\r\n            y=JSON.parse(localStorage.getItem(\"projects2\"));\r\n            z=JSON.parse(localStorage.getItem(\"projects3\"));\r\n           \r\n            \r\n          \r\n\r\n            if(id_categorie===1){\r\n                for(let i=0;i<x.length;i++){\r\n                    if(x[i].id_proiect==id_project){\r\n                        console.log(\"s a gasit elementul care trebuie sters\")\r\n                        x.splice(i,1)\r\n                        console.log(\"array ul dupa splice\")\r\n                        console.log(x)\r\n                    }\r\n                }\r\n                \r\n            localStorage.setItem(\"projects1\",JSON.stringify(x));\r\n            }\r\n            else if(id_categorie===2){\r\n                localStorage.setItem(\"projects2\",JSON.stringify(y));\r\n            }else{\r\n                localStorage.setItem(\"projects3\",JSON.stringify(z));\r\n            }\r\n\r\n\r\n           \r\n           this.props.history.push(\"/\")\r\n           this.render()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n        const Projects = JSON.parse(localStorage.getItem(\"projects\"))\r\n        const Projects1 = JSON.parse(localStorage.getItem(\"projects1\"))\r\n        const Projects2 = JSON.parse(localStorage.getItem(\"projects2\"))\r\n        const Projects3 = JSON.parse(localStorage.getItem(\"projects3\"))\r\n\r\n\r\n        if (Object.keys(Projects).length !== 0) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded: true,\r\n                data: Projects,\r\n                filterdProjects1:Projects1,\r\n                filterdProjects2:Projects2,\r\n                filterdProjects3:Projects3\r\n              \r\n\r\n\r\n            }))\r\n\r\n            \r\n       \r\n          \r\n        }\r\n        else {\r\n            this.fetchData();\r\n            console.log(\"mounted\")\r\n\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.setItem(\"projects\", JSON.stringify(this.state.data))\r\n        localStorage.setItem(\"projects1\", JSON.stringify(this.state.filterdProjects1))\r\n        localStorage.setItem(\"projects2\", JSON.stringify(this.state.filterdProjects2))\r\n        localStorage.setItem(\"projects3\", JSON.stringify(this.state.filterdProjects3))\r\n        console.log(\"unmounted\");\r\n\r\n       \r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const props = this.props;\r\n        console.log(props);\r\n        console.log(this.state.filterdProjects1)\r\n        //this.addRows();\r\n        //console.log(this.state.data);\r\n        \r\n        if(this.props.user.user){\r\n        \r\n        return (\r\n\r\n\r\n            <div style={{ backgroundColor: \"#FFF6EB\", height:\"100%\", width:\"100%\", maxWidth:\"100%\"}}>\r\n                <Typography id=\"welcomeMsg\" style={{ fontFamily:\"\", paddingBottom: \"5%\", paddingTop: \"1.5%\" }} variant=\"h5\" color=\"textPrimary\"  >\r\n\r\n\r\n                You are logged in.\r\n                    \r\n\r\n\r\n                </Typography>\r\n\r\n\r\n                <div className=\"container\" style={{height:\"120vh\"}}>\r\n\r\n                {/*\r\n                  <div>\r\n                        {this.state.data.categories.map(categorie => {\r\n                            return (<h1 key={categorie.id_categorie}></h1>)\r\n                        })}\r\n                    </div>\r\n\r\n                    */}\r\n                    <div className=\"left\"   >\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead style={{ backgroundColor: \"#FFE4C4\"  }}>\r\n                                    <TableRow>\r\n                                        <TableCell>TEHNOLOGII WEB\r\n                                        <div className=\"divider\">\r\n\r\n                                        </div>\r\n                                     \r\n                                            <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                 to ={{pathname:`addProject`,   state: {\r\n                                                    id_categorie:this.state.filterdProjects1[0]\r\n                                                }}}>\r\n\r\n                                            <Button variant = \"contained\" \r\n                                                style={{ color: \"white\" , backgroundColor:\"#931621\"}}\r\n                                                \r\n                                          \r\n                                               >  \r\n                                                <img src={plusWhite} alt=\"add-proj\" height=\"23px\" width=\"23px\"></img>\r\n                                              \r\n                                                \r\n                                               \r\n                                                \r\n                                               \r\n                                            </Button>\r\n                                                 </Link>\r\n\r\n                                        </TableCell>\r\n                                        \r\n                                        <TableCell align=\"right\">ID:</TableCell>\r\n                                        <TableCell align=\"right\">Edit:</TableCell>\r\n                                       \r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                     {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                    {\r\n                                        \r\n                                        this.state.loaded && this.state.filterdProjects1.map((row) => (\r\n                                        <TableRow key={row.id_proiect  }>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                \r\n                                                to ={{pathname:`project/${row.id_proiect}`,\r\n                                                state: {\r\n                                                   id_p: `${row.id_proiect}`\r\n                                               }\r\n                                                }}\r\n                                                >{row.denumire}</Link>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n                                            <TableCell>\r\n                                            <Link \r\n                                            style={{textDecoration:'none', color:\"#931621\"}}\r\n                                            to={{\r\n                                                    pathname: `/EditProject/${row.id_proiect}`, state: {\r\n                                                        id_p: `${row.id_proiect}`,\r\n                                                        desc: `${row.descriere}`,\r\n                                                        link_git: `${row.link_git}`,\r\n                                                        denumire: `${row.denumire}`,\r\n                                                        id_categorie: `${row.id_categorie}`,\r\n                                                        \r\n\r\n                                                    }\r\n                                                }}>\r\n                                                    <EditIcon />\r\n                                                </Link>\r\n                                                </TableCell>\r\n                                            \r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"center\"  >\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}>\r\n                                    <TableRow>\r\n                                        <TableCell>DAM - ANDROID\r\n                                        <div className=\"divider\">\r\n\r\n                            </div>\r\n                            <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                 to ={{pathname:`addProject`,   state: {\r\n                                                    id_categorie:this.state.filterdProjects2[0]\r\n                                                }}}>\r\n\r\n                                            <Button variant = \"contained\" \r\n                                                style={{ color: \"white\" , backgroundColor:\"#931621\"}}\r\n                                                \r\n                                          \r\n                                               >  \r\n                                                <img src={plusWhite} alt=\"add-proj\" height=\"23px\" width=\"23px\"></img>\r\n                                              \r\n                                                \r\n                                               \r\n                                                \r\n                                               \r\n                                            </Button>\r\n                                                 </Link>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell align=\"right\">ID:</TableCell>\r\n                                        <TableCell align=\"right\">Edit:</TableCell>\r\n                                  \r\n\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody id=\"tableBody2\">\r\n                                {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                    { this.state.loaded &&this.state.filterdProjects2.map((row) => (\r\n                                        <TableRow key={row.id_proiect}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                            <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                 to ={{pathname:`project/${row.id_proiect}`,\r\n                                                 state: {\r\n                                                    id_p: `${row.id_proiect}`\r\n                                                }\r\n                                                 }}\r\n                                                \r\n                                                >{row.denumire}</Link>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n                                            <TableCell>\r\n                                            <Link \r\n                                            style={{textDecoration:'none', color:\"#931621\"}}\r\n                                            to={{\r\n                                                    pathname: `/EditProject/${row.id_proiect}`, state: {\r\n                                                        id_p: `${row.id_proiect}`,\r\n                                                        desc: `${row.descriere}`,\r\n                                                        link_git: `${row.link_git}`,\r\n                                                        denumire: `${row.denumire}`,\r\n                                                        id_categorie: `${row.id_categorie}`,\r\n                                                        \r\n\r\n                                                    }\r\n                                                }}>\r\n                                                    <EditIcon />\r\n                                                </Link>\r\n                                                </TableCell>\r\n\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"right\" >\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}> \r\n                                    <TableRow>\r\n                                        <TableCell>MULTIMEDIA\r\n\r\n                                        <div className=\"divider\">\r\n\r\n                                        </div>\r\n                                                 \r\n                                        <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                 to ={{pathname:`addProject`,   state: {\r\n                                                    id_categorie:this.state.filterdProjects3[0]\r\n                                                }}}>\r\n\r\n                                            <Button variant = \"contained\" \r\n                                                style={{ color: \"white\" , backgroundColor:\"#931621\"}}\r\n                                                \r\n                                          \r\n                                               >  \r\n                                                <img src={plusWhite} alt=\"add-proj\" height=\"23px\" width=\"23px\"></img>\r\n                                              \r\n                                                \r\n                                               \r\n                                                \r\n                                               \r\n                                            </Button>\r\n                                                 </Link>\r\n                                        </TableCell>\r\n\r\n\r\n\r\n                                        <TableCell align=\"right\">ID:</TableCell>\r\n                                        <TableCell align=\"right\">Edit:</TableCell>\r\n                                      \r\n\r\n                                    </TableRow>\r\n                                </TableHead >\r\n                                <TableBody>\r\n                                {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                    {  this.state.loaded && this.state.filterdProjects3.map((row) => (\r\n                                        \r\n                                        <TableRow key={row.id_proiect}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                            <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n\r\n                                                 to ={{pathname:`project/${row.id_proiect}`,\r\n                                                     state: {\r\n                                                        id_p: `${row.id_proiect}`\r\n                                                    }\r\n                                                     }}>{row.denumire}</Link>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n                                            <TableCell>\r\n                                            <Link \r\n                                            style={{textDecoration:'none', color:\"#931621\"}}\r\n                                            to={{\r\n                                                    pathname: `/EditProject/${row.id_proiect}`, state: {\r\n                                                        id_p: `${row.id_proiect}`,\r\n                                                        desc: `${row.descriere}`,\r\n                                                        link_git: `${row.link_git}`,\r\n                                                        denumire: `${row.denumire}`,\r\n                                                        id_categorie: `${row.id_categorie}`,\r\n                                                        \r\n\r\n                                                    }\r\n                                                }}>\r\n                                                    <EditIcon />\r\n                                                </Link>\r\n                                                </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n                           \r\n            </div>\r\n          \r\n\r\n        )}\r\n        else\r\n        {\r\n            return (\r\n\r\n\r\n                <div style={{ backgroundColor: \"#FFF6EB\", height:\"100%\", width:\"100%\", minWidth:\"100vw\"}}>\r\n                    <Typography id=\"welcomeMsg\" style={{ fontFamily:\"\", paddingBottom: \"5%\", paddingTop: \"1.5%\" }} variant=\"h5\" color=\"textPrimary\"  >\r\n    \r\n                    Welcome to our app! Here is a list that contains all the current projects available right now.\r\n                      \r\n    \r\n    \r\n                    </Typography>\r\n    \r\n    \r\n                    <div className=\"container\" style={{height:\"120vh\"}}>\r\n    \r\n                    {/*\r\n                      <div>\r\n                            {this.state.data.categories.map(categorie => {\r\n                                return (<h1 key={categorie.id_categorie}></h1>)\r\n                            })}\r\n                        </div>\r\n    \r\n                        */}\r\n                        <div className=\"left\"   >\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead style={{ backgroundColor: \"#FFE4C4\"  }}>\r\n                                        <TableRow>\r\n                                            <TableCell>TEHNOLOGII WEB</TableCell>\r\n                                            <TableCell align=\"right\">ID:</TableCell>\r\n    \r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                        {\r\n                                            \r\n                                            this.state.loaded && this.state.filterdProjects1.map((row) => (\r\n                                            <TableRow key={row.id_proiect  }>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                     to ={{pathname:`project/${row.id_proiect}`,\r\n                                                     state: {\r\n                                                        id_p: `${row.id_proiect}`\r\n                                                    }\r\n                                                     }}>{row.denumire}</Link>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n    \r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n    \r\n                        </div>\r\n    \r\n    \r\n                        <div className=\"center\"  >\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}>\r\n                                        <TableRow>\r\n                                            <TableCell>DAM - ANDROID</TableCell>\r\n    \r\n                                            <TableCell align=\"right\">ID:</TableCell>\r\n    \r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody id=\"tableBody2\">\r\n                                    {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                        { this.state.loaded &&this.state.filterdProjects2.map((row) => (\r\n                                            <TableRow key={row.id_proiect}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                      to ={{pathname:`project/${row.id_proiect}`,\r\n                                                      state: {\r\n                                                         id_p: `${row.id_proiect}`\r\n                                                     }\r\n                                                      }}>{row.denumire}</Link>\r\n                                                </TableCell>\r\n    \r\n                                                <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n    \r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n    \r\n                        </div>\r\n    \r\n                        <div className=\"right\" >\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}> \r\n                                        <TableRow>\r\n                                            <TableCell>MULTIMEDIA</TableCell>\r\n                                            <TableCell align=\"right\">ID:</TableCell>\r\n    \r\n                                        </TableRow>\r\n                                    </TableHead >\r\n                                    <TableBody>\r\n\r\n                                    {this.state.loading && <CircularProgress></CircularProgress>}\r\n                                        {  this.state.loaded && this.state.filterdProjects3.map((row) => (\r\n                                            \r\n                                            <TableRow key={row.id_proiect}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                <Link style={{textDecoration:'none', color:\"#931621\"}}\r\n                                                    to ={{pathname:`project/${row.id_proiect}`,\r\n                                                    state: {\r\n                                                       id_p: `${row.id_proiect}`\r\n                                                   }\r\n                                                    }}>{row.denumire}</Link>\r\n                                                </TableCell>\r\n    \r\n                                                <TableCell align=\"right\">{row.id_proiect}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n    \r\n                        </div>\r\n    \r\n    \r\n    \r\n    \r\n                    </div>\r\n                               \r\n                </div>\r\n              \r\n    \r\n            )\r\n        }\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n       user: state\r\n    }\r\n}\r\n\r\nfunction mapDispachToProps(dispach) {\r\n    return {\r\n        actions: bindActionCreators({ RETURN_USER }, dispach)\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(Home));","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\nav.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\login.js",["102"],"import React, { Component } from 'react'\r\nimport { FormControl, InputLabel, FormHelperText, Input, Button, Container } from '@material-ui/core';\r\nimport anim2 from \"../icons/anim2.gif\"\r\nimport {RETURN_USER} from \"../redux/actionCreators\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport Profile from \"./profile\"\r\nimport Home from \"./home\"\r\nclass Login extends Component {\r\n\r\n   \r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            mail: \"\",\r\n            password: \"\",\r\n            isLoggedIn:false,\r\n            userData:null\r\n        }\r\n        this.RETURN_USER=this.RETURN_USER.bind(this);\r\n        this.handleClick = this.handleLogIn.bind(this);\r\n        this.handleChangeMail = this.handleChangeMail.bind(this);\r\n        this.handleChangePass = this.handleChangePass.bind(this);\r\n\r\n        this.EmailInput=React.createRef();\r\n        \r\n       \r\n    }\r\n\r\n    RETURN_USER(e){\r\n        this.props.actions.RETURN_USER(e);\r\n    }\r\n\r\n \r\n\r\n    componentDidMount (){\r\n   \r\n        console.log(\"log in mounted\")\r\n    \r\n    }\r\n\r\n    handleChangePass(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n\r\n        })\r\n        console.log(event.target.value)\r\n       \r\n    }\r\n\r\n\r\n    handleChangeMail(event) {\r\n        this.setState({\r\n            mail: event.target.value\r\n\r\n        })\r\n        console.log(event.target.value)\r\n      \r\n    }\r\n\r\n    handleLogIn = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n\r\n\r\n        // POST request using fetch with async/await\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ mail: this.state.mail, parola: this.state.password })\r\n        };\r\n        const response = await fetch('http://localhost:8001/api/login', requestOptions);\r\n        const data = await response.json();\r\n        console.log(data)\r\n\r\n    \r\n        if(data.id_user){\r\n            console.log(data.username);\r\n            this.setState({\r\n                isLoggedIn:true,\r\n                userData:data\r\n            })\r\n            this.RETURN_USER(data.id_user);\r\n            localStorage.setItem(\"username\",data.username);\r\n            localStorage.setItem(\"id\",data.id_user);\r\n            localStorage.setItem(\"email\",data.mail);\r\n            console.log(\"aici\");\r\n            console.log(this.props)\r\n\r\n           \r\n            \r\n\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                isLoggedIn:false\r\n            })\r\n          \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if(this.state.isLoggedIn===false){\r\n     \r\n        return (\r\n\r\n\r\n            <div style={{ backgroundColor: \"#FFF6EB\", height:\"150vh\", minWidth:\"100vw\"}}>\r\n\r\n                <div style={{height:\"100px\"}}></div>\r\n\r\n\r\n                <div >\r\n                <Container id=\"logInContainer\" style={{ float:\"left\" ,marginTop:\"5%\",marginLeft:\"30%\", backgroundColor:\"#FFE4C4\", width:300, height:\"300px\", borderRadius:\"25px\"}}>\r\n                <div style={{height:\"20px\"}}></div>\r\n                \r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"email-input\">Email address</InputLabel>\r\n                    <Input ref={this.EmailInput} onChange={this.handleChangeMail} id=\"email-input\" />\r\n\r\n\r\n\r\n\r\n                </FormControl>\r\n\r\n                <div style={{height:\"20px\"}}></div>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"my-input\">Password</InputLabel>\r\n                    <Input onChange={this.handleChangePass} id=\"password-input\" aria-describedby=\"my-helper-text\" />\r\n                    <FormHelperText id=\"my-helper-text\">We'll never share your Password</FormHelperText>\r\n\r\n\r\n\r\n                </FormControl>\r\n\r\n                <div style={{height:\"50px\"}}></div>\r\n\r\n                <Button \r\n                style={{ backgroundColor:\"#931621\"}}\r\n                onClick={this.handleLogIn} variant=\"contained\" color=\"primary\">\r\n                    Log In\r\n                </Button>\r\n               \r\n                </Container>\r\n\r\n             \r\n                <img alt=\"developer-animation\" id=\"animLogIn\" style={{ float:\"right\", marginLeft:\"5%\", marginRight:\"10%\"}} src={anim2}></img>\r\n                </div>\r\n\r\n                \r\n               \r\n            </div>\r\n\r\n\r\n        )}\r\n        else\r\n        {\r\n            return(\r\n              <Home></Home>\r\n               \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n       user: state\r\n    }\r\n}\r\n\r\nfunction mapDispachToProps(dispach) {\r\n    return {\r\n        actions: bindActionCreators({ RETURN_USER }, dispach)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Login);\r\n","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\register.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\reducer.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\initialState.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\actionTypes.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\actionCreators.js",[],["103","104"],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\redux\\selectors.js",[],["105","106"],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\footer.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\addProject.js",[],"D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\project.js",["107","108","109"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Typography} from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\n\r\nclass Project extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            loaded: false\r\n        }\r\n        this.DeleteBug = this.DeleteBug.bind(this);\r\n        this.refreshPage = this.refreshPage.bind(this);\r\n    }\r\n\r\n\r\n\r\n    async fetchProjects() {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loading: true\r\n\r\n        }))\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/projectWithBugs/${this.props.location.state.id_p}`);\r\n            const data = await response.json();\r\n            const bugs = new Array();\r\n            const currentProject = data[0];\r\n            for (let i = 0; i < data[0].Bugs.length; i++) {\r\n                bugs[i] = data[0].Bugs[i];\r\n            }\r\n\r\n\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded: true,\r\n                data: data,\r\n                bugs: bugs,\r\n                currentProject: currentProject\r\n            }))\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async DeleteBug(id_bug) {\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/bugs/${id_bug}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            const data = await response.json();\r\n            console.log(\"test\");\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        /*const savadImages = JSON.parse(localStorage.getItem(\"Images\"))\r\n        if (Object.keys(savadImages).length !== 0) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded:true,\r\n                data: savadImages\r\n\r\n            }))\r\n        }\r\n        else {\r\n            this.fetchImages();\r\n            console.log(\"mounted\")\r\n\r\n        }*/\r\n\r\n        this.fetchProjects();\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n        console.log(\"unmounted\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n\r\n        return (\r\n            <div style={{ backgroundColor: \"#FFF6EB\", height: \"70vw\" }}>\r\n                {this.state.loaded &&\r\n                    <div className=\"container\" style={{ height: \"150px\", width: \"300px\", border: \"5px outset black\", backgroundImage: \"linear-gradient(180deg, #fff, #ddd 40%, #ccc\" }}>\r\n\r\n                        <Typography>\r\n                            Informatii despre Proiectul Curent:\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            ID Proiect:{this.state.currentProject.id_proiect}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Denumire:{this.state.currentProject.denumire}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Descriere:{this.state.currentProject.descriere}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Link GITHUB:{this.state.currentProject.link_git}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            ID Categorie:{this.state.currentProject.id_categorie}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Nr.de BUG-uri:{this.state.bugs.length}\r\n                        </Typography>\r\n                \r\n                  </div>\r\n                 }\r\n                \r\n                <Link to={{pathname:`/formBug/`,}}>\r\n                    <CloudUploadIcon/>\r\n                    Posteaza un BUG\r\n                </Link>\r\n                 \r\n\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div className=\"center\"  >\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}>\r\n\r\n\r\n                                    <TableRow>\r\n\r\n                                        <TableCell >Descriere:</TableCell>\r\n                                        <TableCell align=\"right\">ID:</TableCell>\r\n                                        <TableCell align=\"right\">Prioritate:</TableCell>\r\n                                        <TableCell align=\"right\">Severitate:</TableCell>\r\n                                        <TableCell align=\"right\">ID Categorie:</TableCell>\r\n                                        <TableCell align=\"right\">ID User:</TableCell>\r\n                                        <TableCell align=\"right\">Editare</TableCell>\r\n                                        <TableCell align=\"right\">Stergere</TableCell>\r\n\r\n\r\n                                    </TableRow>\r\n\r\n\r\n\r\n                                </TableHead>\r\n                                <TableBody id=\"tableBody1\">\r\n                                    {this.state.loaded && this.state.bugs.map((row) => (\r\n                                        <TableRow key={row.id_bug}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <Link style={{ textDecoration: 'none', color: \"#931621\" }}\r\n                                                    to={{\r\n                                                        pathname: `/Bug/${row.id_bug}`, state: {\r\n                                                            id_b: `${row.id_bug}`\r\n                                                        }\r\n                                                    }}>{row.descriere}</Link>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"right\">{row.id_bug}</TableCell>\r\n                                            <TableCell align=\"right\">{row.prioritate}</TableCell>\r\n                                            <TableCell align=\"right\">{row.severitate}</TableCell>\r\n                                            <TableCell align=\"right\">{row.id_categorie}</TableCell>\r\n                                            <TableCell align=\"right\">{row.id_user}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <Link to={{\r\n                                                    pathname: `/formBug/${row.id_bug}`, state: {\r\n                                                        id_b: `${row.id_bug}`,\r\n                                                        id_u: `${row.id_user}`,\r\n                                                        id_c: `${row.id_categorie}`,\r\n                                                        des: `${row.descriere}`,\r\n                                                        sev: `${row.severitate}`,\r\n                                                        pri: `${row.prioritate}`\r\n\r\n                                                    }\r\n                                                }}>\r\n                                                    <EditIcon />\r\n                                                </Link>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" ><DeleteIcon onClick={() => this.DeleteBug(row.id_bug)} /></TableCell>\r\n\r\n\r\n\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Project);","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\bug.js",["110","111","112","113","114"],"import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Typography, ButtonGroup, Box } from '@material-ui/core'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass Bug extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            loaded: false\r\n\r\n\r\n        }\r\n    }\r\n    async fetchProjects() {\r\n\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            loading: true\r\n\r\n        }))\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/BugWithComments/${this.props.location.state.id_b}`);\r\n            const data = await response.json();\r\n            const comments = new Array();\r\n            const currentBug = data[0];\r\n            for (let i = 0; i < data[0].Comments.length; i++) {\r\n                comments[i] = data[0].Comments[i];\r\n            }\r\n\r\n\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded: true,\r\n                data: data,\r\n                comments: comments,\r\n                currentBug: currentBug\r\n            }))\r\n\r\n            console.log(\"aici\");\r\n            console.log(data[0]);\r\n            console.log(comments);\r\n\r\n\r\n        }\r\n\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        /*const savadImages = JSON.parse(localStorage.getItem(\"Images\"))\r\n        if (Object.keys(savadImages).length !== 0) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded:true,\r\n                data: savadImages\r\n            }))\r\n        }\r\n        else {\r\n            this.fetchImages();\r\n            console.log(\"mounted\")\r\n        }*/\r\n        this.fetchProjects();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n        console.log(\"unmounted\");\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n\r\n        return (\r\n            <div style={{ backgroundColor: \"#FFF6EB\", height: \"100%\" }}>\r\n                {this.state.loaded &&\r\n                    <div className=\"container\" style={{ height: \"150px\", width: \"300px\", border: \"5px outset black\", backgroundImage: \"linear-gradient(180deg, #fff, #ddd 40%, #ccc\" }}>\r\n\r\n                        <Typography>\r\n                            Informatii despre Bug:\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            ID Bug:{this.state.currentBug.id_bug}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Descriere:{this.state.currentBug.descriere}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Prioritate:{this.state.currentBug.prioritate}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Severitate:{this.state.currentBug.severitate}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            ID Categorie:{this.state.currentBug.id_categorie}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            ID User:{this.state.currentBug.id_user}\r\n                        </Typography>\r\n                        <Typography style={{ color: \"#800000\" }}>\r\n                            Nr.de Comentarii:{this.state.comments.length}\r\n                        </Typography>\r\n\r\n                    </div>\r\n                }\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div className=\"center\"  >\r\n                        {this.state.loaded && this.state.comments.map((comm) => (\r\n                            <Card variant=\"outlined\">\r\n\r\n                                <CardContent style={{ backgroundColor: \"#FFE4C4\"}}>\r\n                                    <Typography style={{color: \"#800000\"}} color=\"textPrimary\" gutterBottom>\r\n                                        Comentariu:{comm.id_comment}\r\n                                     </Typography>\r\n                                    <Typography variant=\"h\" component=\"h2\">\r\n                                        {comm.body}\r\n                                    </Typography>\r\n                                    <Typography  align=\"right\"  color=\"textPrimary\">\r\n                                        Stare:{comm.stare}\r\n                                    </Typography>\r\n                                    <Typography align=\"left\" color=\"textPrimary\">\r\n                                        Nr.Likes:{comm.nrlikes}\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                                \r\n\r\n                            </Card>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Bug);","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\formBug.js",["115","116"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\n\r\n\r\nclass formBug extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            loaded: false,\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        this.updateBug = this.updateBug.bind(this);\r\n        this.handleDescriereChange = this.handleDescriereChange.bind(this);\r\n        this.handleSeveritateChange = this.handleSeveritateChange.bind(this);\r\n        this.handlePrioritateChange = this.handlePrioritateChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n    async updateBug(id_bug) {\r\n        \r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ severitate: this.state.severitate, descriere: this.state.descriere, prioritate: this.state.prioritate })\r\n        };\r\n        console.log(\"aici\")\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/bugs/${id_bug}`, requestOptions)\r\n            const data = await response.json();\r\n            \r\n        }\r\n\r\n\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n        console.log(\"unmounted\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleDescriereChange = (event) => {\r\n        this.setState({\r\n            descriere: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePrioritateChange = (event) => {\r\n        this.setState({\r\n            prioritate: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSeveritateChange = (event) => {\r\n        this.setState({\r\n            severitate: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        return (\r\n            //<div></div>\r\n\r\n            <div>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">ID Bug:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" readOnly={true} defaultValue={this.props.location.state.id_b} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Id User:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" readOnly={true} defaultValue={this.props.location.state.id_u} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Id Categorie:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" readOnly={true} defaultValue={this.props.location.state.id_c} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Descrierea Bug-ului:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.des} onChange={this.handleDescriereChange} />\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n\r\n                        <InputLabel htmlFor=\"component-filled\">Prioritate:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.pri} onChange={this.handlePrioritateChange} />\r\n\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Severitate:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.sev} onChange={this.handleSeveritateChange} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() => this.updateBug(this.props.location.state.id_b)}\r\n                        startIcon={<SaveIcon />}\r\n\r\n                    >\r\n                        Save\r\n                </Button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default withRouter(formBug);","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\formBug2.js",["117","118"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\n\r\n\r\nclass formBug2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            loaded: false,\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        this.postBug = this.postBug.bind(this);\r\n        this.handleDescriereChange = this.handleDescriereChange.bind(this);\r\n        this.handleSeveritateChange = this.handleSeveritateChange.bind(this);\r\n        this.handlePrioritateChange = this.handlePrioritateChange.bind(this);\r\n        this.handleIdCategorieChange = this.handleIdCategorieChange.bind(this);\r\n        this.handleIdUserChange = this.handleIdUserChange.bind(this);\r\n        this.handleIdProiectChange=this.handleIdProiectChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n    async postBug() {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id_proiect:this.state.id_proiect , id_user: this.state.id_user, id_categorie: this.state.id_categorie, severitate: this.state.severitate, descriere: this.state.descriere, prioritate: this.state.prioritate })\r\n        };\r\n        console.log('aici');\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/bugs`, requestOptions)\r\n            const data = await response.json();\r\n            console.log(this.state)\r\n\r\n        }\r\n\r\n\r\n\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n        console.log(\"unmounted\");\r\n    }\r\n\r\n    handleIdProiectChange = (event) => {\r\n        this.setState({\r\n            id_proiect: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleIdUserChange = (event) => {\r\n        this.setState({\r\n            id_user: event.target.value\r\n        })\r\n    }\r\n    handleIdCategorieChange = (event) => {\r\n        this.setState({\r\n            id_categorie: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    handleDescriereChange = (event) => {\r\n        this.setState({\r\n            descriere: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePrioritateChange = (event) => {\r\n        this.setState({\r\n            prioritate: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSeveritateChange = (event) => {\r\n        this.setState({\r\n            severitate: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        return (\r\n\r\n\r\n            <div>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Id Proiect:</InputLabel>\r\n                        <FilledInput id=\"component-filled\"  onChange={this.handleIdProiectChange} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Id User:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" onChange={this.handleIdUserChange} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Id Categorie:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" onChange={this.handleIdCategorieChange} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Descrierea Bug-ului:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" onChange={this.handleDescriereChange} />\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n\r\n                        <InputLabel htmlFor=\"component-filled\">Prioritate:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" onChange={this.handlePrioritateChange} />\r\n\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Severitate:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" onChange={this.handleSeveritateChange} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() => this.postBug()}\r\n                        startIcon={<SaveIcon />}\r\n\r\n                    >\r\n                        Save\r\n                </Button>\r\n\r\n                </form>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default withRouter(formBug2);","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\profile.js",["119","120"],"import React ,{Component} from 'react'\r\nimport {  Typography } from '@material-ui/core'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {RETURN_USER} from \"../redux/actionCreators\"\r\nimport {connect} from \"react-redux\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport iconProfile from \"../icons/iconProfile.png\"\r\n\r\n\r\n\r\nclass Profile extends Component{\r\n    constructor(){\r\n        super();\r\n       this.state ={\r\n           data:[],\r\n           users:[],\r\n           loading : false,\r\n           loaded: false,\r\n           username: localStorage.getItem(\"username\"),\r\n           id: localStorage.getItem(\"id\"),\r\n           mail: localStorage.getItem(\"email\")\r\n\r\n       }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const props=this.props;\r\n        //console.log(props)\r\n        if(this.props.user.user){\r\n        \r\n            return (\r\n    \r\n    \r\n                <div style={{ backgroundColor: \"#FFF6EB\", height:\"100%\", width:\"100%\", minWidth:\"100vw\"}}>\r\n                    <Typography id=\"welcomeMsg\" style={{ fontFamily:\"\", paddingBottom: \"5%\", paddingTop: \"1.5%\" }} variant=\"h5\" color=\"textPrimary\"  >\r\n    \r\n    \r\n                    Pagina de profil a utilizatorului\r\n                        \r\n    \r\n    \r\n                    </Typography>\r\n    \r\n    \r\n                    <div className=\"container\" style={{ height:\"120vh\"}}>\r\n    \r\n                    {/*\r\n                      <div>\r\n                            {this.state.data.categories.map(categorie => {\r\n                                return (<h1 key={categorie.id_categorie}></h1>)\r\n                            })}\r\n                        </div>\r\n    \r\n                        */}\r\n                        <div className='inLine' style={{ marginLeft:\"20%\",width:\"30%\", float:'left'}}  >\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead style={{ backgroundColor: \"#FFE4C4\"  }}>\r\n                                        <TableRow>\r\n                                            <TableCell>PROFIL USER</TableCell>\r\n                                            {/* <TableCell align=\"right\">ID:</TableCell> */}\r\n    \r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n\r\n\r\n                                    {/* {\r\n                                        \r\n                                        this.state.loaded && this.state.users.map((row) => (\r\n                                        <TableRow key={row.id_user  }>\r\n                                            <TableCell  scope=\"row\">\r\n                                              {row.username}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.mail}</TableCell>\r\n\r\n                                        </TableRow>\r\n                                    ))} */}\r\n                                     <TableRow>\r\n                                            <TableCell>ID : {this.state.id}</TableCell>    \r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                            <TableCell>Username : {this.state.username}</TableCell>    \r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                            <TableCell>Email : {this.state.mail}</TableCell>    \r\n                                    </TableRow>\r\n                                    \r\n\r\n\r\n                                        \r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n    \r\n                        </div>\r\n\r\n                        <div className='inLine' style={{width:\"50%\",float:'right'}}>\r\n\r\n                        <img  id=\"imgIcon\" style={{ float:\"right\", marginRight:\"10%\", marginTop:\"1%\"}} src={iconProfile}></img>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                               \r\n                </div>\r\n              \r\n    \r\n            )}\r\n      \r\n    }\r\n  \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n       user: state\r\n    }\r\n}\r\n\r\nfunction mapDispachToProps(dispach) {\r\n    return {\r\n        actions: bindActionCreators({ RETURN_USER }, dispach)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Profile);","D:\\AN 3 - SEMESTRU 1\\TEHNOLOGII WEB\\PROIECT_TW_X\\PROIECT_TW\\FRONTEND\\bug-fixer\\src\\components\\editProject.js",["121","122","123","124","125","126","127","128","129","130","131"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\n\r\n\r\nclass EditProject extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            loaded: false,\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        this.deleteProject = this.deleteProject.bind(this);\r\n        this.updateProject = this.updateProject.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleGitLinkChange = this.handleGitLinkChange.bind(this);\r\n\r\n\r\n    }\r\n\r\n\r\n    async deleteProject(id_p) {\r\n\r\n\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/projects/${id_p}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            const data = await response.json();\r\n            console.log(\"test\");\r\n\r\n\r\n            const props = this.props;\r\n\r\n            let x = [];\r\n            let y = [];\r\n            let z = [];\r\n\r\n            x = JSON.parse(localStorage.getItem(\"projects1\"));\r\n            y = JSON.parse(localStorage.getItem(\"projects2\"));\r\n            z = JSON.parse(localStorage.getItem(\"projects3\"));\r\n            console.log(x)\r\n            if (props.location.state.id_categorie == 1) {\r\n                for (let i = 0; i < x.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (x[i].id_proiect == this.props.location.state.id_p) {\r\n                        x.splice(i, 1)\r\n                        localStorage.setItem(\"projects1\", JSON.stringify(x));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            else if (props.location.state.id_categorie == 2) {\r\n                for (let i = 0; i < y.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (y[i].id_proiect == this.props.location.state.id_p) {\r\n                        y.splice(i, 1)\r\n                        localStorage.setItem(\"projects2\", JSON.stringify(y));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                for (let i = 0; i < z.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (z[i].id_proiect == this.props.location.state.id_p) {\r\n                        z.splice(i, 1)\r\n                        localStorage.setItem(\"projects3\", JSON.stringify(z));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n            props.history.push(\"/\")\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async updateProject(id_p) {\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ descriere: this.state.description, denumire: this.state.name, link_git: this.state.git_link })\r\n        };\r\n        console.log(\"aici\")\r\n        try {\r\n            const response = await fetch(`http://localhost:8001/api/projects/${id_p}`, requestOptions)\r\n            const data = await response.json();\r\n            console.log(data);\r\n            const props = this.props;\r\n\r\n            let x = [];\r\n            let y = [];\r\n            let z = [];\r\n\r\n            x = JSON.parse(localStorage.getItem(\"projects1\"));\r\n            y = JSON.parse(localStorage.getItem(\"projects2\"));\r\n            z = JSON.parse(localStorage.getItem(\"projects3\"));\r\n            console.log(x)\r\n            if (props.location.state.id_categorie == 1) {\r\n                for (let i = 0; i < x.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (x[i].id_proiect == this.props.location.state.id_p) {\r\n                        //x.splice(i,1)\r\n                       \r\n                        x[i].denumire=this.state.name;\r\n                        x[i].descriere=this.state.description;\r\n                        x[i].link_git=this.state.git_link\r\n                        localStorage.setItem(\"projects1\", JSON.stringify(x));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            else if (props.location.state.id_categorie == 2) {\r\n                for (let i = 0; i < y.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (y[i].id_proiect == this.props.location.state.id_p) {\r\n                        //y.splice(i,1)\r\n                        y[i].denumire=this.state.name;\r\n                        y[i].descriere=this.state.description;\r\n                        y[i].link_git=this.state.git_link\r\n                        localStorage.setItem(\"projects2\", JSON.stringify(y));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                for (let i = 0; i < z.length; i++) {\r\n                    //console.log(\"testTest\")\r\n                    if (z[i].id_proiect == this.props.location.state.id_p) {\r\n                        //z.splice(i,1)\r\n                        z[i].denumire=this.state.name;\r\n                        z[i].descriere=this.state.description;\r\n                        z[i].link_git=this.state.git_link\r\n                        localStorage.setItem(\"projects3\", JSON.stringify(z));\r\n                        //console.log(\"Projects 1 dupa splice\" )\r\n                        //console.log(x)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n            }\r\n            props.history.push(\"/\")\r\n        }\r\n        \r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(`updated... is data loading? ${this.state.loading}`)\r\n        console.log(`updated... is data loaded? ${this.state.loaded}`)\r\n\r\n        // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n        //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n        // }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n        console.log(\"unmounted\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleDescriptionChange = (event) => {\r\n        this.setState({\r\n            description: event.target.value\r\n        })\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    handleGitLinkChange = (event) => {\r\n        this.setState({\r\n            git_link: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        console.log(this.props.location.state.id_p)\r\n        console.log(\"editProject props\");\r\n        console.log(props)\r\n\r\n        return (\r\n          \r\n           \r\n            <div style={{ backgroundColor: \"#FFE4C4\", height:\"100vh\"}}>\r\n\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Project Id:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" readOnly={true} defaultValue={this.props.location.state.id_p} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\" >\r\n                        <InputLabel  htmlFor=\"component-filled\">Category Id:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" readOnly={true} defaultValue={this.props.location.state.id_categorie} />\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Name:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.denumire} onChange={this.handleNameChange} />\r\n                    </FormControl>\r\n\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n                        <InputLabel htmlFor=\"component-filled\">Description:</InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.desc} onChange={this.handleDescriptionChange} />\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <FormControl variant=\"filled\">\r\n\r\n                        <InputLabel htmlFor=\"component-filled\">Github Link </InputLabel>\r\n                        <FilledInput id=\"component-filled\" defaultValue={this.props.location.state.link_git} onChange={this.handleGitLinkChange} />\r\n\r\n                    </FormControl>\r\n\r\n                    <br />\r\n\r\n                    <div style={\r\n                        { height: \"20px\" }\r\n                    }></div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() => this.updateProject(this.props.location.state.id_p)}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ color: \"white\", backgroundColor: \"#931621\" }}\r\n                    >\r\n                        Save\r\n                </Button>\r\n                    <div style={{ width: \"20px\", height: \"20px\" }}></div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() => this.deleteProject(this.props.location.state.id_p)}\r\n                        startIcon={<DeleteIcon />}\r\n                        style={{ color: \"white\", backgroundColor: \"#931621\" }}\r\n                    >\r\n                        Delete Project\r\n                </Button>\r\n\r\n                </form>\r\n            </div>\r\n            \r\n\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport default withRouter(EditProject);",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":15,"column":8,"nodeType":"138","messageId":"139","endLine":15,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":50,"column":37,"nodeType":"142","messageId":"143","endLine":50,"endColumn":48},{"ruleId":"140","severity":1,"message":"141","line":58,"column":36,"nodeType":"142","messageId":"143","endLine":58,"endColumn":47},{"ruleId":"140","severity":1,"message":"141","line":67,"column":36,"nodeType":"142","messageId":"143","endLine":67,"endColumn":47},{"ruleId":"136","severity":1,"message":"144","line":101,"column":19,"nodeType":"138","messageId":"139","endLine":101,"endColumn":23},{"ruleId":"136","severity":1,"message":"145","line":107,"column":19,"nodeType":"138","messageId":"139","endLine":107,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":118,"column":39,"nodeType":"148","messageId":"149","endLine":118,"endColumn":41},{"ruleId":"136","severity":1,"message":"150","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":15},{"ruleId":"132","replacedBy":"151"},{"ruleId":"134","replacedBy":"152"},{"ruleId":"132","replacedBy":"153"},{"ruleId":"134","replacedBy":"154"},{"ruleId":"140","severity":1,"message":"141","line":43,"column":26,"nodeType":"142","messageId":"143","endLine":43,"endColumn":37},{"ruleId":"136","severity":1,"message":"144","line":74,"column":19,"nodeType":"138","messageId":"139","endLine":74,"endColumn":23},{"ruleId":"136","severity":1,"message":"145","line":128,"column":15,"nodeType":"138","messageId":"139","endLine":128,"endColumn":20},{"ruleId":"136","severity":1,"message":"155","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"156","line":3,"column":30,"nodeType":"138","messageId":"139","endLine":3,"endColumn":41},{"ruleId":"136","severity":1,"message":"157","line":3,"column":43,"nodeType":"138","messageId":"139","endLine":3,"endColumn":46},{"ruleId":"140","severity":1,"message":"141","line":30,"column":30,"nodeType":"142","messageId":"143","endLine":30,"endColumn":41},{"ruleId":"136","severity":1,"message":"145","line":94,"column":15,"nodeType":"138","messageId":"139","endLine":94,"endColumn":20},{"ruleId":"136","severity":1,"message":"144","line":44,"column":19,"nodeType":"138","messageId":"139","endLine":44,"endColumn":23},{"ruleId":"136","severity":1,"message":"145","line":105,"column":15,"nodeType":"138","messageId":"139","endLine":105,"endColumn":20},{"ruleId":"136","severity":1,"message":"144","line":47,"column":19,"nodeType":"138","messageId":"139","endLine":47,"endColumn":23},{"ruleId":"136","severity":1,"message":"145","line":125,"column":15,"nodeType":"138","messageId":"139","endLine":125,"endColumn":20},{"ruleId":"136","severity":1,"message":"145","line":38,"column":15,"nodeType":"138","messageId":"139","endLine":38,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":111,"column":25,"nodeType":"160","endLine":111,"endColumn":122},{"ruleId":"136","severity":1,"message":"144","line":45,"column":19,"nodeType":"138","messageId":"139","endLine":45,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":59,"column":51,"nodeType":"148","messageId":"149","endLine":59,"endColumn":53},{"ruleId":"146","severity":1,"message":"147","line":62,"column":41,"nodeType":"148","messageId":"149","endLine":62,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":73,"column":56,"nodeType":"148","messageId":"149","endLine":73,"endColumn":58},{"ruleId":"146","severity":1,"message":"147","line":76,"column":41,"nodeType":"148","messageId":"149","endLine":76,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":88,"column":41,"nodeType":"148","messageId":"149","endLine":88,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":131,"column":51,"nodeType":"148","messageId":"149","endLine":131,"endColumn":53},{"ruleId":"146","severity":1,"message":"147","line":134,"column":41,"nodeType":"148","messageId":"149","endLine":134,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":149,"column":56,"nodeType":"148","messageId":"149","endLine":149,"endColumn":58},{"ruleId":"146","severity":1,"message":"147","line":152,"column":41,"nodeType":"148","messageId":"149","endLine":152,"endColumn":43},{"ruleId":"146","severity":1,"message":"147","line":167,"column":41,"nodeType":"148","messageId":"149","endLine":167,"endColumn":43},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'plus' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'data' is assigned a value but never used.","'props' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Profile' is defined but never used.",["161"],["162"],["161"],["162"],"'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Box' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]